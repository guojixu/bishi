import heapq
import datetime
from collections import defaultdict

n, m = [int(_) for _ in input().split()]
mp = defaultdict(dict)
for _ in range(m):
    u, v, time = [int(_) for _ in input().split()]
    mp[u][v] = time
s, e, start = input().split()
s, e = int(s), int(e)


def dijkstra():
    dist = {}
    tmp = []
    heapq.heappush(tmp, (0, s))
    while tmp:
        t, u = heapq.heappop(tmp)
        if u in dist:
            continue
        dist[u] = t
        if u == e:
            return dist[e]
        for v in mp[u]:
            if v not in dist:
                heapq.heappush(tmp, (dist[u] + mp[u][v], v))
    return -1


cur_year = "2020"
hours = dijkstra()
d = datetime.datetime.strptime(cur_year + "/" + start, "%Y/%m.%d/%H")
delta = datetime.timedelta(hours=hours)
d += delta
# print(datetime.datetime.strftime(d, "%-m.%-d/%H"))
print("{}.{}/{}".format(d.month, d.day, d.hour))
