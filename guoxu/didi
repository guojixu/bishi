import heapq
import datetime
from collections import defaultdict

n, m = [int(_) for _ in input().split()]
mp = defaultdict(list)
for _ in range(m):
    u, v, time = [int(_) for _ in input().split()]
    mp[u].append((v, time))
s, e, start = input().split()
s, e = int(s), int(e)


def dijkstra():
    pq = [(0, s)]
    dist = {}
    while pq:
        d, node = heapq.heappop(pq)
        if node in dist: continue
        dist[node] = d
        for nei, d2 in mp[node]:
            if nei not in dist:
                heapq.heappush(pq, (d + d2, nei))
    return dist[e]


cur_year = "2020"
hours = dijkstra()
d = datetime.datetime.strptime(cur_year + "/" + start, "%Y/%m.%d/%H")
delta = datetime.timedelta(hours=hours)
d += delta
# print(datetime.datetime.strftime(d, "%-m.%-d/%H"))
print("{}.{}/{}".format(d.month, d.day, d.hour))
